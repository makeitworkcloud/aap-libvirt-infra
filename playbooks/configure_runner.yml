#!/usr/bin/env ansible-playbook
# File: configure_runner.yml
# GitHub: https://github.com/makeitworkcloud/aap-libvirt-infra/playbooks/configure_runner.yml
# Description: This playbook configures a pre-provisioned GitHub Actions runner.
# Author:
#                                   _|
#   _|    _|  _|_|_|      _|_|    _|_|_|_|    _|_|
#     _|_|    _|    _|  _|    _|    _|      _|    _|
#   _|    _|  _|    _|  _|    _|    _|      _|    _|
#   _|    _|  _|    _|    _|_|        _|_|    _|_|
---
- name: Configure a pre-provisioned GitHub Actions runner
  hosts: runner
  gather_facts: false
  vars_files:
    - ../vars/configure_runner.yml
  tasks:
    - name: Wait for port 22 to be open on the runner
      ansible.builtin.wait_for:
        host: "{{ runner_ipv4_addr }}"
        port: 22
        timeout: 300
        state: started
      delegate_to: "{{ libvirt_host }}"

    - name: Get latest GitHub Actions runner version
      ansible.builtin.uri:
        url: https://api.github.com/repos/actions/runner/releases/latest
        return_content: true
      register: actions_runner_json_reponse

    - name: Get GitHub runner registration token
      ansible.builtin.uri:
        url: "https://api.github.com/orgs/{{ github_org }}/actions/runners/registration-token"
        method: POST
        headers:
          Authorization: "Bearer {{ github_pat }}"
          Accept: "application/vnd.github+json"
        body_format: json
        return_content: true
        status_code:
          - 200
          - 201
      register: github_runner_token

    - name: Set registration token fact
      ansible.builtin.set_fact:
        runner_registration_token: "{{ github_runner_token.json.token }}"

    - name: Download GitHub Actions runner
      ansible.builtin.get_url:
        url: >-
          {{ 'https://github.com/actions/runner/releases/download/' ~ actions_runner_json_reponse.json.tag_name
          ~ '/actions-runner-linux-x64-' ~ actions_runner_json_reponse.json.tag_name[1:] ~ '.tar.gz' }}
        dest: "/home/{{ runner_ssh_user }}/actions-runner-linux-x64-{{ actions_runner_json_reponse.json.tag_name[1:] }}.tar.gz"
        owner: "{{ runner_ssh_user }}"
        mode: '0644'

    - name: Create actions-runner directory
      ansible.builtin.file:
        path: "/home/{{ runner_ssh_user }}/actions-runner"
        state: directory
        owner: "{{ runner_ssh_user }}"
        group: "{{ runner_ssh_user }}"
        mode: '0755'

    - name: Extract GitHub Actions runner
      ansible.builtin.unarchive:
        src: "/home/{{ runner_ssh_user }}/actions-runner-linux-x64-{{ actions_runner_json_reponse.json.tag_name[1:] }}.tar.gz"
        dest: "/home/{{ runner_ssh_user }}/actions-runner"
        remote_src: true
        owner: "{{ runner_ssh_user }}"

    - name: Set random id string
      ansible.builtin.set_fact:
        random_id: "{{ lookup('community.general.random_string', length=4, numbers=false, special=false) }}"

    - name: Configure GitHub Actions runner
      ansible.builtin.shell:
        cmd: |
          ./config.sh --name libvirt-{{ random_id }} \
          --unattended --labels libvirt --url https://github.com/{{ github_org }} --token {{ runner_registration_token }}
        chdir: "/home/{{ runner_ssh_user }}/actions-runner"
        creates: "/home/{{ runner_ssh_user }}/actions-runner/.runner"
      changed_when: true

    - name: Install GitHub Actions runner as a service
      ansible.builtin.command:
        cmd: |
          ./svc.sh install
        chdir: "/home/{{ runner_ssh_user }}/actions-runner"
        creates: "/etc/systemd/system/actions.runner.{{ github_org }}.libvirt-*.service"
      become: true
      changed_when: true

    - name: Disable SELinux
      ansible.posix.selinux:
        state: disabled
      become: true
      notify: Reboot the runner to apply SELinux changes

  handlers:
    - name: Reboot the runner to apply SELinux changes
      ansible.builtin.reboot:
        msg: "Rebooting to apply SELinux changes"
        pre_reboot_delay: 10
        reboot_timeout: 300
      become: true
